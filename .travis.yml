---
sudo: required
dist: bionic
env:
  global:
  # auto vagrant installation
notifications:
  slack:
    on_failure: always

fleet_script_rootless_tasks : &fleet_script_rootless_tasks
      script:
        - go get github.com/rootless-containers/rootlesskit/cmd/rootlesskit
        - go get github.com/rootless-containers/rootlesskit/cmd/rootlessctl
fleet_script_tasks : &fleet_script_tasks
      script:
        - python --version
fleet_install_tasks : &fleet_install_tasks
      install:
        - pip install -r requirements.txt


matrix:
  fast_finish: true
  include:

    # https://github.com/rootless-containers/rootlesskit#setup
    - name: "rootless  Python 3.7 on bionic amd64" #OK
      dist: bionic
      addons:
           snaps:
             - name: minikube
               confinement: strict
               channel: stable
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      <<: *fleet_script_rootless_tasks
      after_success:
        - deactivate


#   # =============================================macOS=============================================

    - name: "podman(no support) minikube kubectl Python 2.7.17 on macOS 10.15.4 osx xcode11.5"
      os: osx
      osx_image: xcode11.5
      language: shell
      addons:
        homebrew:
          packages:
            - kubectl #kubernetes-cli 1.18.3
            - minikube #minikube 1.11.0
          casks: # Installing Casks
            - podman
          update: true
      before_install:
        - pip install virtualenv
        - virtualenv -p $(which python2) ~venvpy2
        - source ~venvpy2/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      script:
        - kubectl version --client
        - minikube version
        - brew cat kubectl
        - brew cat minikube
        - brew home kubectl
        - brew home minikube
        - brew info kubectl
        - brew info minikube
        # - brew doctor #Check system for potential problems
        - brew update #Update brew and cask
        - brew cask upgrade
        - brew cask info podman
        # - podman info #No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself
        # - "podman build ."
        # - podman images #lists all the images
        # - podman run  -p 80:80 -dit centos
        # - podman ps -a
        # - minikube config set driver podman #make docker the default driver
        # - minikube start --driver=podman #Start a cluster using the podman driver
      after_success:
        - brew uninstall kubectl minikube
        - brew cleanup kubectl minikube
        - brew cask uninstall --force podman
        - deactivate

    - name: "podman(no support) CRI-O container runtime minikube kubectl Python 2.7.17 on macOS 10.15.4 osx xcode11.5"
      os: osx
      osx_image: xcode11.5
      language: shell
      addons:
        homebrew:
          packages:
            - kubectl
            - minikube
          casks: # Installing Casks
            - podman
          update: true
      before_install:
        - pip install virtualenv
        - virtualenv -p $(which python2) ~venvpy2
        - source ~venvpy2/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      script:
        - kubectl version --client
        - brew cat kubectl
        - brew cat minikube
        - brew home kubectl
        - brew home minikube
        - brew info kubectl
        - brew info minikube
        # - brew doctor #Check system for potential problems
        - brew update #Update brew and cask
        - brew cask upgrade
        - brew cask info podman
        # - podman info #No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself
        # - "podman build ."
        # - podman images #lists all the images
        # - podman run  -p 80:80 -dit centos
        # - podman ps -a
        # - minikube config set driver podman #make docker the default driver
        # - minikube start --driver=podman --container-runtime=cri-o #Start a cluster using the podman driver
      after_success:
        - brew uninstall kubectl minikube
        - brew cleanup kubectl minikube
        - brew cask uninstall --force podman
        - deactivate

 # =============================================windows=============================================

    - name: "podman(no support) kubectl minikube Python 3.8 on Windows"
      os: windows
      language: shell
      env:
        - PATH=/c/Python38:/c/Python38/Scripts:$PATH
      before_install:
        - choco install python --version 3.8.1
        - pip install virtualenv
        - virtualenv $HOME/venv
        - source $HOME/venv/Scripts/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      script:
        - choco install kubernetes-cli
        - choco install minikube
        # - minikube start --driver=none # The driver 'none' is not supported on windows
        # - minikube status
        - kubectl version --client
        # - set USERPROFILE #query the value of %USERPROFILE%
        # - set #see all currently defined environment variables    #USERPROFILE='C:\Users\travis'
        - echo cd %USERPROFILE% #when debugging a command
        - echo %cd% #print current path
        - echo mkdir %USERPROFILE%\.kube
        - mkdir %USERPROFILE%\.kube
        - echo cd %USERPROFILE%\.kube
        - cd %USERPROFILE%\.kube
        # - mkdir .kube
        # - cd .kube
        - cd #print current path
        # - New-Item config -type file #Configure kubectl to use a remote Kubernetes cluster:
      after_success:
        - deactivate
